{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/vue/multilanguage/language-utility.js","webpack:///./src/vue/multilanguage/language-manager.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isValidLang","lang","languages","includes","getLangFromRoute","route","segments","path","split","filter","length","getRouteNameForLang","routeName","normalizedRouteName","substring","toUpperCase","getLangUrl","routes","newRouteName","langRoute","find","getLocalizedValue","LanguageManager","router","this","defaultLang","languageUtility","savedLang","localStorage","getItem","restoreSavedLang","saveLangOnChange","initialized","beforeEach","to","from","next","currentLang","fallbackLang","afterEach","toLang","setHtmlLang","setItem","currentRoute","push","document","querySelector","setAttribute","options"],"mappings":"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","file":"language-manager.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const isValidLang = (lang, languages) => languages.includes(lang);\r\nexport const getLangFromRoute = (route, languages) => {\r\n    const segments = route.path.split('/').filter(s => s);\r\n    const lang = segments && segments.length ? segments[0] : null;\r\n    if (isValidLang(lang, languages)) {\r\n        return lang;\r\n    }\r\n    return null;\r\n};\r\nexport const getRouteNameForLang = (lang, route, languages) => {\r\n    const routeName = route.name;\r\n    if (!routeName) {\r\n        return null;\r\n    }\r\n\r\n    let normalizedRouteName = routeName;\r\n    const routeLang = getLangFromRoute(route, languages);\r\n    if (routeLang) {\r\n        normalizedRouteName = routeName.substring(0, routeName.length - 2);\r\n    }\r\n\r\n    return normalizedRouteName + lang.toUpperCase();\r\n};\r\nexport const getLangUrl = (lang, route, routes, languages) => {\r\n    const newRouteName = getRouteNameForLang(lang, route, languages);\r\n    if (!newRouteName) {\r\n        return null;\r\n    }\r\n\r\n    const langRoute = routes.find(r => r.name === newRouteName);\r\n\r\n    if (langRoute == null) {\r\n        return null;\r\n    }\r\n\r\n    return langRoute.path;\r\n};\r\nexport const getLocalizedValue = (value, lang) => value && value[lang] ? value[lang] : value;\r\n\r\n\r\nexport default {\r\n    isValidLang,\r\n    getLangFromRoute,\r\n    getRouteNameForLang,\r\n    getLangUrl,\r\n    getLocalizedValue\r\n};","import languageUtility from './language-utility';\r\n\r\nclass LanguageManager {\r\n    constructor(router, languages) {\r\n        this.router = router;\r\n        this.languages = languages;\r\n    }\r\n\r\n    get currentRoute() {\r\n        return this.router.currentRoute;\r\n    }\r\n    get currentLang() {\r\n        return languageUtility.getLangFromRoute(this.currentRoute, this.languages) || this.defaultLang;\r\n    }\r\n    get routes() {\r\n        return this.router.options.routes;\r\n    }\r\n\r\n\r\n    init(defaultLang) {\r\n        this.defaultLang = languageUtility.isValidLang(defaultLang, this.languages) ? defaultLang : 'en';\r\n        const savedLang = localStorage.getItem('lang');\r\n        this.savedLang = languageUtility.isValidLang(savedLang, this.languages) ? savedLang : null;\r\n\r\n        this.restoreSavedLang();\r\n        this.saveLangOnChange();\r\n    }\r\n\r\n    restoreSavedLang() {\r\n        let initialized = false;\r\n        this.router.beforeEach((to, from, next) => {\r\n            if (initialized) {\r\n                return next();\r\n            }\r\n            //console.debug('Restore saved lang', { mgr: this, to, from });\r\n\r\n            initialized = true;\r\n            const currentLang = languageUtility.getLangFromRoute(to, this.languages);\r\n            const fallbackLang = this.savedLang || this.defaultLang;\r\n\r\n            if (fallbackLang && from.name == null && !currentLang) {\r\n                const newRouteName = this.getRouteNameForLang(fallbackLang, to);\r\n                return next({ name: newRouteName });\r\n            }\r\n            return next();\r\n        });\r\n    }\r\n    saveLangOnChange() {\r\n        this.router.afterEach((to) => {\r\n            const toLang = languageUtility.getLangFromRoute(to, this.languages);\r\n            this.setHtmlLang(toLang);\r\n            if (toLang !== this.savedLang) {\r\n                localStorage.setItem('lang', toLang);\r\n            }\r\n        });\r\n    }\r\n    changeLang(lang) {\r\n        if (this.currentLang === lang) {\r\n            return;\r\n        }\r\n\r\n        const newRouteName = this.getRouteNameForLang(lang, this.currentRoute);\r\n        if (!newRouteName) {\r\n            return;\r\n        }\r\n\r\n        this.router.push({ name: newRouteName });\r\n    }\r\n\r\n    getRouteNameForLang(lang, route = null) {\r\n        if (!route) {\r\n            route = this.currentRoute;\r\n        }\r\n\r\n        return languageUtility.getRouteNameForLang(lang, route, this.languages);\r\n    }\r\n    getLangUrl(lang, route = null) {\r\n        if (!route) {\r\n            route = this.currentRoute;\r\n        }\r\n\r\n        return languageUtility.getLangUrl(lang, route, this.routes, this.languages);\r\n    }\r\n    getInitialRoute(route, lang) {\r\n        const currentLang = this.getLangFromRoute(route, this.languages);\r\n\r\n        if (lang && this.languages.includes(lang) && !currentLang) {\r\n            const newRouteName = route.name.substring(0, route.name.length - 2) + lang.toUpperCase();\r\n            return { name: newRouteName };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    setHtmlLang(lang) {\r\n        document.querySelector('html').setAttribute('lang', lang);\r\n    }\r\n}\r\n\r\nexport default LanguageManager;\r\n"],"sourceRoot":""}