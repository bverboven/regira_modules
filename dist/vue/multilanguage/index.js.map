{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/vue/multilanguage/language-utility.js","webpack:///./src/vue/multilanguage/language-manager.js","webpack:///./src/vue/multilanguage/language-mixins-factory.js","webpack:///./src/vue/multilanguage/translation-mixins-factory.js","webpack:///./src/vue/multilanguage/translation-store-factory.js","webpack:///./src/utilities/object-utility.js","webpack:///./src/vue/multilanguage/index.js","webpack:///./src/vue/multilanguage/install.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isValidLang","lang","languages","includes","getLangFromRoute","route","segments","path","split","filter","length","getRouteNameForLang","routeName","normalizedRouteName","substring","toUpperCase","getLangUrl","routes","newRouteName","langRoute","find","getLocalizedValue","LanguageManager","router","this","defaultLang","languageUtility","savedLang","localStorage","getItem","restoreSavedLang","saveLangOnChange","initialized","beforeEach","to","from","next","currentLang","fallbackLang","afterEach","toLang","setHtmlLang","setItem","currentRoute","push","document","querySelector","setAttribute","options","computed","$route","$lang","langUrl","methods","changeLang","translations","$store","getters","translate","translationEntry","translation","manager","namespaced","state","details","Set","values","map","x","keys","flat","mutations","load","payload","actions","commit","isPlainObject","obj","toString","mixin","target","val","merge","obj1","obj2","reduce","rest","install","Vue","service","store","createTranslationModule","registerModule","concat","languageManager","init","navigator","language","mixins","createLanguageMixins","createTranslationMixins"],"mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUT,QAGnC,IAAIC,EAASM,EAAiBE,GAAY,CACzCJ,EAAGI,EACHC,GAAG,EACHV,QAAS,IAUV,OANAW,EAAQF,GAAUG,KAAKX,EAAOD,QAASC,EAAQA,EAAOD,QAASQ,GAG/DP,EAAOS,GAAI,EAGJT,EAAOD,QA0Df,OArDAQ,EAAoBK,EAAIF,EAGxBH,EAAoBM,EAAIP,EAGxBC,EAAoBO,EAAI,SAASf,EAASgB,EAAMC,GAC3CT,EAAoBU,EAAElB,EAASgB,IAClCG,OAAOC,eAAepB,EAASgB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhET,EAAoBe,EAAI,SAASvB,GACX,oBAAXwB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAepB,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAepB,EAAS,aAAc,CAAE0B,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBO,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAASjC,GAChC,IAAIgB,EAAShB,GAAUA,EAAO4B,WAC7B,WAAwB,OAAO5B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAO,EAAoBO,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRT,EAAoBU,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG5B,EAAoB+B,EAAI,GAIjB/B,EAAoBA,EAAoBgC,EAAI,G,+BClFrD,qPAAO,IAAMC,EAAc,SAACC,EAAMC,GAAP,OAAqBA,EAAUC,SAASF,IACtDG,EAAmB,SAACC,EAAOH,GACpC,IAAMI,EAAWD,EAAME,KAAKC,MAAM,KAAKC,QAAO,SAAAV,GAAC,OAAIA,KAC7CE,EAAOK,GAAYA,EAASI,OAASJ,EAAS,GAAK,KACzD,OAAIN,EAAYC,EAAMC,GACXD,EAEJ,MAEEU,EAAsB,SAACV,EAAMI,EAAOH,GAC7C,IAAMU,EAAYP,EAAM9B,KACxB,IAAKqC,EACD,OAAO,KAGX,IAAIC,EAAsBD,EAM1B,OALkBR,EAAiBC,EAAOH,KAEtCW,EAAsBD,EAAUE,UAAU,EAAGF,EAAUF,OAAS,IAG7DG,EAAsBZ,EAAKc,eAEzBC,EAAa,SAACf,EAAMI,EAAOY,EAAQf,GAC5C,IAAMgB,EAAeP,EAAoBV,EAAMI,EAAOH,GACtD,IAAKgB,EACD,OAAO,KAGX,IAAMC,EAAYF,EAAOG,MAAK,SAAAtC,GAAC,OAAIA,EAAEP,OAAS2C,KAE9C,OAAiB,MAAbC,EACO,KAGJA,EAAUZ,MAERc,EAAoB,SAACpC,EAAOgB,GAAR,OAAiBhB,GAASA,EAAMgB,GAAQhB,EAAMgB,GAAQhB,GAGxE,WACXe,cACAI,mBACAO,sBACAK,aACAK,sB,yNC3CEC,E,WACF,WAAYC,EAAQrB,I,4FAAW,SAC3BsB,KAAKD,OAASA,EACdC,KAAKtB,UAAYA,E,oDAchBuB,GACDD,KAAKC,YAAcC,UAAgB1B,YAAYyB,EAAaD,KAAKtB,WAAauB,EAAc,KAC5F,IAAME,EAAYC,aAAaC,QAAQ,QACvCL,KAAKG,UAAYD,UAAgB1B,YAAY2B,EAAWH,KAAKtB,WAAayB,EAAY,KAEtFH,KAAKM,mBACLN,KAAKO,qB,yCAGU,WACXC,GAAc,EAClBR,KAAKD,OAAOU,YAAW,SAACC,EAAIC,EAAMC,GAC9B,GAAIJ,EACA,OAAOI,IAIXJ,GAAc,EACd,IAAMK,EAAcX,UAAgBtB,iBAAiB8B,EAAI,EAAKhC,WACxDoC,EAAe,EAAKX,WAAa,EAAKF,YAE5C,OAAIa,GAA6B,MAAbH,EAAK5D,OAAiB8D,EAE/BD,EAAK,CAAE7D,KADO,EAAKoC,oBAAoB2B,EAAcJ,KAGzDE,S,yCAGI,WACfZ,KAAKD,OAAOgB,WAAU,SAACL,GACnB,IAAMM,EAASd,UAAgBtB,iBAAiB8B,EAAI,EAAKhC,WACzD,EAAKuC,YAAYD,GACbA,IAAW,EAAKb,WAChBC,aAAac,QAAQ,OAAQF,Q,iCAI9BvC,GACP,GAAIuB,KAAKa,cAAgBpC,EAAzB,CAIA,IAAMiB,EAAeM,KAAKb,oBAAoBV,EAAMuB,KAAKmB,cACpDzB,GAILM,KAAKD,OAAOqB,KAAK,CAAErE,KAAM2C,O,0CAGTjB,GAAoB,IAAdI,EAAc,uDAAN,KAK9B,OAJKA,IACDA,EAAQmB,KAAKmB,cAGVjB,UAAgBf,oBAAoBV,EAAMI,EAAOmB,KAAKtB,a,iCAEtDD,GAAoB,IAAdI,EAAc,uDAAN,KAKrB,OAJKA,IACDA,EAAQmB,KAAKmB,cAGVjB,UAAgBV,WAAWf,EAAMI,EAAOmB,KAAKP,OAAQO,KAAKtB,a,sCAErDG,EAAOJ,GACnB,IAAMoC,EAAcb,KAAKpB,iBAAiBC,EAAOmB,KAAKtB,WAEtD,OAAID,GAAQuB,KAAKtB,UAAUC,SAASF,KAAUoC,EAEnC,CAAE9D,KADY8B,EAAM9B,KAAKuC,UAAU,EAAGT,EAAM9B,KAAKmC,OAAS,GAAKT,EAAKc,eAGxE,O,kCAGCd,GACR4C,SAASC,cAAc,QAAQC,aAAa,OAAQ9C,K,mCArFpD,OAAOuB,KAAKD,OAAOoB,e,kCAGnB,OAAOjB,UAAgBtB,iBAAiBoB,KAAKmB,aAAcnB,KAAKtB,YAAcsB,KAAKC,c,6BAGnF,OAAOD,KAAKD,OAAOyB,QAAQ/B,Y,gCAmFpBK,a,mQChGA,mBAAO,CAClB2B,SAAU,CACNhD,KADM,WAEF,OAAQuB,KAAK0B,OAAS9C,2BAAiBoB,KAAK0B,OAAQ1B,KAAK2B,MAAMjD,WAAa,OAASsB,KAAK2B,MAAM1B,aAEpG2B,QAJM,WAII,WACN,OAAO,SAAAnD,GAAI,OAAIe,qBAAWf,EAAM,EAAKiD,OAAQ,EAAKC,MAAMlC,OAAQ,EAAKkC,MAAMjD,aAE/EmB,kBAPM,WAOc,WAChB,OAAO,SAAApC,GAAK,OAAIA,GAASA,EAAM,EAAKgB,MAAQhB,EAAM,EAAKgB,MAAQhB,KAGvEoE,QAAS,CACLC,WADK,SACMrD,GACPuB,KAAK2B,MAAMG,WAAWrD,OChBnB,mBAAO,CAElBgD,SAAU,CACNM,aADM,WAEF,OAAO/B,KAAKgC,OAAOC,QAAQ,8BAE/BC,UAJM,WAIM,WACR,OAAO,SAAAnE,GACH,IAAMoE,EAAmB,EAAKJ,aAAahE,GAE3C,GAAwB,MAApBoE,EACA,OAAOpE,EAEX,GAAgC,iBAArBoE,EACP,OAAOA,EAGX,IAAIC,EAAcD,EAAiB,EAAK1D,MAKxC,OAJmB,MAAf2D,IACAA,EAAcD,EAAiB,EAAKlC,cAGjCmC,GAAerE,O,m2BCtBvB,eAACsE,GAAD,MAAc,CACzBC,YAAY,EACZC,MAAOF,EAAQE,MACfN,QAAS,CACLF,aAAc,SAAAQ,GAAK,OAAIA,EAAMC,SAAW,IACxC9D,UAAW,SAAC6D,EAAON,GAAR,SAAwB,IAAIQ,IAAIvF,OACtCwF,OAAOT,EAAQF,cACfY,KAAI,SAAAC,GAAC,OAAI1F,OAAO2F,KAAKD,MACrBE,WAETC,UAAW,CACPC,KAAM,SAACT,EAAOU,GACVZ,EAAQE,MAAMC,QAAUS,IAGhCC,QAAS,CACLF,M,EAAI,yBAAE,6GAASG,EAAT,EAASA,OAAT,SACoBd,EAAQG,UAD5B,OACIA,EADJ,OAEFW,EAAO,OAAQX,GAFb,0CAAF,E,8KAAA,+CAAE,I,EAAF,G,qOCbL,IAAMY,EAAgB,SAAAC,GAAG,MAAmB,WAAf,EAAOA,IAA4D,oBAAxCnG,OAAOkB,UAAUkF,SAAS3G,KAAK0G,IAqEjFE,EAAQ,SAACC,GAElB,SAASD,EAAMC,EAAQC,EAAK1F,GACxB,IAAMsF,EAAMG,EAAOzF,GAMnB,OALIqF,EAAcK,IAAQL,EAAcC,GACpCG,EAAOzF,GAAO2F,EAAML,EAAKI,GAEzBD,EAAOzF,GAAO0F,EAEXD,EAEX,SAASE,EAAMC,EAAMC,GACjB,OAAO1G,OAAO2F,KAAKe,GAAMC,QAAO,SAACR,EAAKtF,GAAN,OAAcwF,EAAMF,EAAKO,EAAK7F,GAAMA,KAAM4F,GAZxC,2BAATG,EAAS,iCAATA,EAAS,kBAetC,OAAOA,EAAKD,QAAO,SAACvG,EAAG+F,GAAJ,OAAYK,EAAMpG,EAAG+F,KAAMG,I,0uBChFnC,WACXO,QCFW,SAACC,EAAD,GAAuE,IAA/DC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,MAAOnE,EAA+C,EAA/CA,OAAQgC,EAAuC,EAAvCA,aAAuC,IAAzB9B,mBAAyB,MAAX,KAAW,EAC5EjE,EAASmI,EAAwBF,GACvCC,EAAME,eAAe,eAAgBpI,GAGrC,IAAM0C,EAAY,EAAI,IAAI+D,IACtBvF,OAAOwF,OAAOX,GACTY,KAAI,SAAAC,GAAC,OAAI1F,OAAO2F,KAAKD,MACrBE,OACAuB,OAAOpE,KAGVqE,EAAkB,IAAIxE,UAAgBC,EAAQrB,GACpD4F,EAAgBC,KAAKC,UAAUC,SAASnF,UAAU,EAAG,IAAMZ,EAAU,IAAMuB,GAC3E+D,EAAI5F,UAAUuD,MAAQ2C,EAEtB,IAAMI,EAASnB,EACXoB,IACAC,KAEJZ,EAAIT,MAAMmB","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export const isValidLang = (lang, languages) => languages.includes(lang);\r\nexport const getLangFromRoute = (route, languages) => {\r\n    const segments = route.path.split('/').filter(s => s);\r\n    const lang = segments && segments.length ? segments[0] : null;\r\n    if (isValidLang(lang, languages)) {\r\n        return lang;\r\n    }\r\n    return null;\r\n};\r\nexport const getRouteNameForLang = (lang, route, languages) => {\r\n    const routeName = route.name;\r\n    if (!routeName) {\r\n        return null;\r\n    }\r\n\r\n    let normalizedRouteName = routeName;\r\n    const routeLang = getLangFromRoute(route, languages);\r\n    if (routeLang) {\r\n        normalizedRouteName = routeName.substring(0, routeName.length - 2);\r\n    }\r\n\r\n    return normalizedRouteName + lang.toUpperCase();\r\n};\r\nexport const getLangUrl = (lang, route, routes, languages) => {\r\n    const newRouteName = getRouteNameForLang(lang, route, languages);\r\n    if (!newRouteName) {\r\n        return null;\r\n    }\r\n\r\n    const langRoute = routes.find(r => r.name === newRouteName);\r\n\r\n    if (langRoute == null) {\r\n        return null;\r\n    }\r\n\r\n    return langRoute.path;\r\n};\r\nexport const getLocalizedValue = (value, lang) => value && value[lang] ? value[lang] : value;\r\n\r\n\r\nexport default {\r\n    isValidLang,\r\n    getLangFromRoute,\r\n    getRouteNameForLang,\r\n    getLangUrl,\r\n    getLocalizedValue\r\n};","import languageUtility from './language-utility';\r\n\r\nclass LanguageManager {\r\n    constructor(router, languages) {\r\n        this.router = router;\r\n        this.languages = languages;\r\n    }\r\n\r\n    get currentRoute() {\r\n        return this.router.currentRoute;\r\n    }\r\n    get currentLang() {\r\n        return languageUtility.getLangFromRoute(this.currentRoute, this.languages) || this.defaultLang;\r\n    }\r\n    get routes() {\r\n        return this.router.options.routes;\r\n    }\r\n\r\n\r\n    init(defaultLang) {\r\n        this.defaultLang = languageUtility.isValidLang(defaultLang, this.languages) ? defaultLang : 'en';\r\n        const savedLang = localStorage.getItem('lang');\r\n        this.savedLang = languageUtility.isValidLang(savedLang, this.languages) ? savedLang : null;\r\n\r\n        this.restoreSavedLang();\r\n        this.saveLangOnChange();\r\n    }\r\n\r\n    restoreSavedLang() {\r\n        let initialized = false;\r\n        this.router.beforeEach((to, from, next) => {\r\n            if (initialized) {\r\n                return next();\r\n            }\r\n            //console.debug('Restore saved lang', { mgr: this, to, from });\r\n\r\n            initialized = true;\r\n            const currentLang = languageUtility.getLangFromRoute(to, this.languages);\r\n            const fallbackLang = this.savedLang || this.defaultLang;\r\n\r\n            if (fallbackLang && from.name == null && !currentLang) {\r\n                const newRouteName = this.getRouteNameForLang(fallbackLang, to);\r\n                return next({ name: newRouteName });\r\n            }\r\n            return next();\r\n        });\r\n    }\r\n    saveLangOnChange() {\r\n        this.router.afterEach((to) => {\r\n            const toLang = languageUtility.getLangFromRoute(to, this.languages);\r\n            this.setHtmlLang(toLang);\r\n            if (toLang !== this.savedLang) {\r\n                localStorage.setItem('lang', toLang);\r\n            }\r\n        });\r\n    }\r\n    changeLang(lang) {\r\n        if (this.currentLang === lang) {\r\n            return;\r\n        }\r\n\r\n        const newRouteName = this.getRouteNameForLang(lang, this.currentRoute);\r\n        if (!newRouteName) {\r\n            return;\r\n        }\r\n\r\n        this.router.push({ name: newRouteName });\r\n    }\r\n\r\n    getRouteNameForLang(lang, route = null) {\r\n        if (!route) {\r\n            route = this.currentRoute;\r\n        }\r\n\r\n        return languageUtility.getRouteNameForLang(lang, route, this.languages);\r\n    }\r\n    getLangUrl(lang, route = null) {\r\n        if (!route) {\r\n            route = this.currentRoute;\r\n        }\r\n\r\n        return languageUtility.getLangUrl(lang, route, this.routes, this.languages);\r\n    }\r\n    getInitialRoute(route, lang) {\r\n        const currentLang = this.getLangFromRoute(route, this.languages);\r\n\r\n        if (lang && this.languages.includes(lang) && !currentLang) {\r\n            const newRouteName = route.name.substring(0, route.name.length - 2) + lang.toUpperCase();\r\n            return { name: newRouteName };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    setHtmlLang(lang) {\r\n        document.querySelector('html').setAttribute('lang', lang);\r\n    }\r\n}\r\n\r\nexport default LanguageManager;\r\n","import { getLangFromRoute, getLangUrl } from './language-utility';\r\n\r\nexport default () => ({\r\n    computed: {\r\n        lang() {\r\n            return (this.$route ? getLangFromRoute(this.$route, this.$lang.languages) : null) || this.$lang.defaultLang;\r\n        },\r\n        langUrl() {\r\n            return lang => getLangUrl(lang, this.$route, this.$lang.routes, this.$lang.languages);\r\n        },\r\n        getLocalizedValue() {\r\n            return value => value && value[this.lang] ? value[this.lang] : value;\r\n        }\r\n    },\r\n    methods: {\r\n        changeLang(lang) {\r\n            this.$lang.changeLang(lang);\r\n        }\r\n    }\r\n});","export default () => ({\r\n    // requires languageMixins\r\n    computed: {\r\n        translations() {\r\n            return this.$store.getters['translations/translations'];\r\n        },\r\n        translate() {\r\n            return key => {\r\n                const translationEntry = this.translations[key];\r\n\r\n                if (translationEntry == null) {\r\n                    return key;\r\n                }\r\n                if (typeof translationEntry === 'string') {\r\n                    return translationEntry;\r\n                }\r\n\r\n                let translation = translationEntry[this.lang];\r\n                if (translation == null) {\r\n                    translation = translationEntry[this.defaultLang];\r\n                }\r\n\r\n                return translation || key;\r\n            };\r\n        }\r\n    }\r\n});","export default (manager) => ({\r\n    namespaced: true,\r\n    state: manager.state,\r\n    getters: {\r\n        translations: state => state.details || {},\r\n        languages: (state, getters) => [...new Set(Object\r\n            .values(getters.translations)\r\n            .map(x => Object.keys(x))\r\n            .flat())]\r\n    },\r\n    mutations: {\r\n        load: (state, payload) => {\r\n            manager.state.details = payload;\r\n        }\r\n    },\r\n    actions: {\r\n        load: async ({ commit }) => {\r\n            const details = await manager.details();\r\n            commit('load', details);\r\n        }\r\n    }\r\n});","import { trim } from './string-utility';\r\n\r\n// consider using https://www.npmjs.com/package/is-plain-object\r\nexport const isPlainObject = obj => typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]';\r\n\r\nexport const flattenObject = obj => {\r\n    const getKey = (key, prefix) => prefix === '' ? key : `${prefix}.${key}`;\r\n    const flattenProperties = (obj, prefix = '', result = {}) => {\r\n\r\n        if (Array.isArray(obj)) {\r\n            for (let i = 0; i < value.length; i++) {\r\n                flattenProperties(obj, `${prefix}[${i}]`, result);\r\n            }\r\n        } else if (typeof (obj) !== 'object') {\r\n            result[prefix] = obj;\r\n        } else {\r\n            for (const entry of Object.entries(obj)) {\r\n                const name = entry[0];\r\n                const value = entry[1];\r\n                if (Array.isArray(value)) {\r\n                    const arrKey = getKey(`${name}[${i}]`, prefix);\r\n                    for (let i in value) {\r\n                        flattenProperties(value[i], arrKey, result);\r\n                    }\r\n                } else {\r\n                    const objKey = getKey(name, prefix);\r\n                    if (typeof (value) === 'object' && Object.keys(value).length > 0) {\r\n                        flattenProperties(value, objKey, result);\r\n                    } else {\r\n                        result[objKey] = value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    return flattenProperties(obj);\r\n};\r\nexport const crawlObject = (o, key) => key.split('.').reduce((res, p) => res == null ? null : res[p], o);\r\n\r\nexport const deepCopy = (obj) => {\r\n    // https://github.com/vuejs/vuex/blob/dev/src/util.js\r\n\r\n    const find = (list, f) => list.filter(f)[0];\r\n    const copyWithCache = (o, cache = []) => {\r\n        if (o === null || typeof o !== 'object') {\r\n            return o;\r\n        }\r\n\r\n        const hit = find(cache, c => c.original === o)\r\n        if (hit) {\r\n            return hit.copy;\r\n        }\r\n\r\n        if (o instanceof Date) {\r\n            return new Date(o);\r\n        }\r\n\r\n        const copy = Array.isArray(o) ? [] : {}\r\n        cache.push({ original: o, copy });\r\n\r\n        Object.keys(o).forEach(key => {\r\n            copy[key] = copyWithCache(o[key], cache);\r\n        });\r\n\r\n        return copy;\r\n    }\r\n\r\n    return copyWithCache(obj);\r\n};\r\n\r\nexport const mixin = (target, ...rest) => {\r\n    // https://github.com/jonschlinkert/mixin-deep/blob/master/index.js\r\n    function mixin(target, val, key) {\r\n        const obj = target[key];\r\n        if (isPlainObject(val) && isPlainObject(obj)) {\r\n            target[key] = merge(obj, val);\r\n        } else {\r\n            target[key] = val;\r\n        }\r\n        return target;\r\n    }\r\n    function merge(obj1, obj2) {\r\n        return Object.keys(obj2).reduce((obj, key) => mixin(obj, obj2[key], key), obj1);\r\n    }\r\n\r\n    return rest.reduce((r, obj) => merge(r, obj), target);\r\n};\r\n\r\nconst getKeys = keyFilter => keyFilter ? Object.keys(keyFilter).filter(x => typeof (keyFilter[x]) !== \"undefined\") : [];\r\nexport const filterObject = (obj, filter) => {\r\n    const keys = getKeys(filter);\r\n    return !keys.length || keys.every(key => {\r\n        if (typeof (filter[key]) === \"function\") {\r\n            return filter[key].apply(obj, key);\r\n        }\r\n        if (filter[key] instanceof Date || typeof (filter[key]) === \"number\") {\r\n            if (!(key in obj)) {\r\n                const objKey = key[3].toLowerCase() + (key.length > 4 ? key.substr(4) : \"\");\r\n                if (key.startsWith(\"min\")) {\r\n                    return obj[objKey] >= filter[key];\r\n                }\r\n                if (key.startsWith(\"max\")) {\r\n                    return obj[objKey] <= filter[key];\r\n                }\r\n            }\r\n        }\r\n        //add wildcard to key so logic can be inside views\r\n        const trimmedKey = trim(key, \"*\");\r\n        if (typeof (filter[key]) === \"string\" && typeof (obj[trimmedKey]) === \"string\") {\r\n            var value = filter[key];\r\n            if (key.startsWith(\"*\") && key.endsWith(\"*\")) {\r\n                return obj[trimmedKey].includes(value);\r\n            } else if (key.startsWith(\"*\")) {\r\n                return obj[trimmedKey].endsWith(value);\r\n            } else if (key.endsWith(\"*\")) {\r\n                return obj[trimmedKey].startsWith(value);\r\n            }\r\n        }\r\n        if (key in obj) {\r\n            if (Array.isArray(filter[key]) && !Array.isArray(obj[key])) {\r\n                return filter[key].includes(obj[key]);\r\n            } else if (Array.isArray(obj[key]) && !Array.isArray(filter[key])) {\r\n                return obj[key].includes(filter[key]);\r\n            } else if (Array.isArray(obj[key]) && Array.isArray(filter[key])) {\r\n                return filter[key].every(fk => obj[key].includes(fk));\r\n            }\r\n            if (filter[key] instanceof Object) {\r\n                // recursive call\r\n                return filterObject(obj[key], filter[key]);\r\n            }\r\n            return obj[key] === filter[key];\r\n        }\r\n        return true;\r\n    });\r\n};\r\n\r\nexport default {\r\n    isPlainObject,\r\n    flattenObject,\r\n    crawlObject,\r\n    mixin,\r\n    filterObject\r\n};","export { default as LanguageManager } from './language-manager';\r\nexport { default as mapLanguages } from './language-mixins-factory';\r\nexport { default as mapTranslations } from './translation-mixins-factory';\r\nexport { default as languageUtility } from './language-utility';\r\n\r\nimport install from './install';\r\n\r\nexport default {\r\n    install\r\n};","import createTranslationModule from './translation-store-factory';\r\nimport LanguageManager from './language-manager';\r\nimport createLanguageMixins from './language-mixins-factory';\r\nimport createTranslationMixins from './translation-mixins-factory';\r\nimport { mixin } from '../../utilities/object-utility';\r\n\r\nexport default (Vue, { service, store, router, translations, defaultLang = 'en' }) => {\r\n    const module = createTranslationModule(service);\r\n    store.registerModule('translations', module);\r\n\r\n    // languages\r\n    const languages = [...new Set(\r\n        Object.values(translations)\r\n            .map(x => Object.keys(x))\r\n            .flat()\r\n            .concat(defaultLang))\r\n    ];\r\n\r\n    const languageManager = new LanguageManager(router, languages);\r\n    languageManager.init(navigator.language.substring(0, 2) || languages[0] || defaultLang);\r\n    Vue.prototype.$lang = languageManager;\r\n\r\n    const mixins = mixin(\r\n        createLanguageMixins(),\r\n        createTranslationMixins()\r\n    );\r\n    Vue.mixin(mixins);\r\n};"],"sourceRoot":""}