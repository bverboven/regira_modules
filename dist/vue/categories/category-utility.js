!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n=e();for(var r in n)("object"==typeof exports?exports:t)[r]=n[r]}}(window,(function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){"use strict";n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return i}));var r=function(t,e){return e.includes(t)},o=function(t,e){var n=t.path.split("/").filter((function(t){return t})),o=n&&n.length?n[0]:null;return r(o,e)?o:null},i=function(t,e){return t&&t[e]?t[e]:t}},function(t,e,n){"use strict";n.r(e),n.d(e,"findCategory",(function(){return o})),n.d(e,"getChildCategories",(function(){return i})),n.d(e,"getHeaderCategories",(function(){return u})),n.d(e,"getFooterCategories",(function(){return a})),n.d(e,"getSitemapNodes",(function(){return c})),n.d(e,"generateSitemap",(function(){return f}));var r=n(4),o=function(t,e){return e.find((function(e){return e.name===t}))},i=function(t,e){return e.filter((function(e){return e.parentName===t}))},u=function(t){return t.filter((function(t){return t.header}))},a=function(t){return t.filter((function(t){return t.footer}))},c=function(t){return t.getRoots().filter((function(t){return!1!==t.value.sitemap}))},f=r.default;e.default={findCategory:o,getChildCategories:i,getHeaderCategories:u,getFooterCategories:a,getSitemapNodes:c,generateSitemap:f}},function(t,e,n){"use strict";function r(t){return function(t){if(Array.isArray(t))return o(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return o(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}n.d(e,"a",(function(){return i})),n.d(e,"c",(function(){return u})),n.d(e,"b",(function(){return a}));var i=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=document.createElement("meta");n.setAttribute("http-equiv","Refresh"),n.setAttribute("content","".concat(e,"; url=").concat(t)),document.head.appendChild(n)},u=function(t,e){var n=document.getElementsByName(t)[0];if(null==n){var o=r(document.head.childNodes.values()).filter((function(t){return"META"===t.tagName})).slice(-1)[0];n=document.createElement("meta"),null!=o?o.insertAdjacentElement("afterend",n):document.head.appendChild(n)}n.setAttribute("name",t),n.setAttribute("content",e)},a=function(t){var e=document.querySelector("[rel=canonical]");if(null==e){var n=r(document.head.childNodes.values()).filter((function(t){return"META"===t.tagName})).slice(-1)[0];e=document.createElement("meta"),null!=n?n.insertAdjacentElement("afterend",e):document.head.appendChild(e)}e.setAttribute("rel","canonical"),e.setAttribute("href",t)}},function(t,e,n){"use strict";n.r(e),n.d(e,"findPageCategory",(function(){return f})),n.d(e,"implementMetaDescriptionTag",(function(){return l})),n.d(e,"generateCanonicalUrl",(function(){return d})),n.d(e,"implementCanonicalTag",(function(){return s})),n.d(e,"implementDocumentTitle",(function(){return p}));var r=n(2),o=function(t){var e=new URL(t);return function(t){return"https:"===("string"==typeof t?new URL(t):t).protocol}(e)?t:"https:"+t.substring(e.protocol.length)},i=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;e||(e=window.location.origin);for(var n=e.split("/"),r=t.split("/"),o=0;o<r.length;o++)"."!==r[o]&&(".."===r[o]?n.pop():n.push(r[o]));return n.join("/")};var u=function(t){for(var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:" \t\v\f\ufeff\n\r\u2028\u2029",n=""+t,r=t.length-1;r>=0;r--){if(!e.includes(t[r]))return n;n=n.substring(0,r)}return n},a=n(1),c=n(0),f=function(t,e,n){if(!t)return null;var r=Object(a.findCategory)(t,n);if(!r){var o=e.toUpperCase();t&&t.lastIndexOf(o)===t.length-o.length&&(r=Object(a.findCategory)(t.substring(0,t.length-o.length),n))}return r||console.error("Could not find category",{routeName:t})},l=function(t,e,n,o){t.afterEach((function(t){var i=Object(c.a)(t,n)||o,u=f(t.name,i,e);Object(r.c)("description",Object(c.b)(u.description,i)||"")}))},d=function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=i(t,window.location.origin);return e&&(n=o(n)),u(n,"/")},s=function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];t.afterEach((function(n){var o=t.resolve(n).href,i=d(o,e);Object(r.b)(i)}))},p=function(t,e,n,r,o){t.afterEach((function(t){var i=Object(c.a)(t,r)||o,u=f(t.name,i,n);document.title=e.replace("{title}",Object(c.b)(u.title,i))}))};e.default={findPageCategory:f,generateCanonicalUrl:d,implementMetaDescriptionTag:l,implementCanonicalTag:s,implementDocumentTitle:p}},function(t,e,n){"use strict";n.r(e);var r=n(1),o=n(3);function i(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==a.return||a.return()}finally{if(o)throw i}}return n}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return u(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return u(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}e.default=function(t){var e=Object(r.getSitemapNodes)(t).map((function(t){return Object.entries(t.value.path)})).flat().map((function(t){var e=i(t,2),n=e[0],r=e[1];return"".concat(n).concat(r)})).map((function(t){return Object(o.generateCanonicalUrl)(t,!0)}));return e.sort(),e.join("\n")}}])}));
//# sourceMappingURL=category-utility.js.map